import time
import requests
from flask import Flask
from telegram import Bot

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
TOKEN = "8111573872:AAE_LGmsgtGmKmOxx2v03Tsd5bL28z9bL3Y"
CHAT_ID = 944484522
bot = Bot(token=TOKEN)

# === Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render –∏ UptimeRobot ===
app = Flask(__name__)

@app.route('/')
def home():
    return "I'm alive!"

@app.route('/send_test')
def send_test():
    bot.send_message(chat_id=CHAT_ID, text="‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    return "Test message sent!"

# === –õ–æ–≥–∏–∫–∞ MEM-GEM –∞–Ω–∞–ª–∏–∑–∞ ===
def get_mem_gems():
    try:
        url = "https://api.coingecko.com/api/v3/coins/markets"
        params = {
            "vs_currency": "usd",
            "order": "market_cap_asc",
            "per_page": 250,
            "page": 1,
            "price_change_percentage": "24h"
        }
        response = requests.get(url, params=params)
        data = response.json()

        for coin in data:
            name = coin['name']
            symbol = coin['symbol']
            price = coin['current_price']
            ath = coin['ath']
            volume = coin['total_volume']

            if not ath or ath == 0:
                continue

            drop_percent = ((price - ath) / ath) * 100

            # –£—Å–ª–æ–≤–∏—è: –ø–∞–¥–µ–Ω–∏–µ –Ω–∞ 80-90% –∏ –æ–±—ä—ë–º > $1M
            if -95 <= drop_percent <= -80 and volume >= 1_000_000:
                # –§–∏–±–æ–Ω–∞—á—á–∏ —Ü–µ–ª–∏
                tp1 = round(price * 1.272, 6)
                tp2 = round(price * 1.618, 6)
                tp3 = round(price * 2.0, 6)
                tp4 = round(price * 2.618, 6)

                high_potential = "üî• High Potential!" if tp4 >= price * 3 else ""

                message = (
                    f"üöÄ <b>{name.upper()}</b> (${symbol.upper()})\n"
                    f"üí∞ –¶–µ–Ω–∞: <b>${price}</b>\n"
                    f"üìâ –ü–∞–¥–µ–Ω–∏–µ –æ—Ç ATH: <b>{round(drop_percent, 2)}%</b>\n"
                    f"üìà –¶–µ–ª–∏ —Ä–æ—Å—Ç–∞:\n"
                    f"‚Äî TP1: ${tp1}\n"
                    f"‚Äî TP2: ${tp2}\n"
                    f"‚Äî TP3: ${tp3}\n"
                    f"‚Äî TP4: ${tp4}\n"
                    f"{high_potential}\n"
                    f"\nüîó <a href='https://www.coingecko.com/en/coins/{coin['id']}'>–ì—Ä–∞—Ñ–∏–∫ CoinGecko</a>"
                )

                bot.send_message(chat_id=CHAT_ID, text=message, parse_mode="HTML")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ–º-–≥–µ–º–æ–≤: {e}")

# === –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ===
def main_loop():
    while True:
        try:
            print("üîç –ü–æ–∏—Å–∫ MEM-GEM –º–æ–Ω–µ—Ç...")
            get_mem_gems()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
        time.sleep(180)  # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã

# === –ó–∞–ø—É—Å–∫ ===
def keep_alive():
    import threading
    def run():
        app.run(host="0.0.0.0", port=10000)
    t = threading.Thread(target=run)
    t.start()

keep_alive()
main_loop()
