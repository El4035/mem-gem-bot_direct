import requests
import time
from flask import Flask
import threading
import datetime
import telegram

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram ===
TOKEN = "8111573872:AAE_LGmsgtGmKmOxx2v03Tsd5bL28z9bL3Y"
CHAT_ID = "944484522"
bot = telegram.Bot(token=TOKEN)

# === Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (—á—Ç–æ–±—ã –Ω–µ –∑–∞—Å—ã–ø–∞–ª) ===
app = Flask(__name__)

@app.route('/')
def home():
    return "I'm alive!"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    thread = threading.Thread(target=run)
    thread.start()

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–µ—Ç –Ω–∞ –º–µ–º-–≥–µ–º ===
def check_mem_gems():
    url = "https://api.coingecko.com/api/v3/coins/markets"
    params = {
        "vs_currency": "usd",
        "order": "market_cap_asc",
        "per_page": 250,
        "page": 1,
        "sparkline": False
    }

    response = requests.get(url, params=params)
    coins = response.json()

    for coin in coins:
        try:
            name = coin["name"]
            symbol = coin["symbol"].upper()
            price = coin["current_price"]
            ath = coin["ath"]
            ath_change = coin["ath_change_percentage"]
            volume = coin["total_volume"]
            market_cap = coin["market_cap"]

            # === –§–∏–ª—å—Ç—Ä—ã ===
            if ath_change < -80 and price <= 1 and market_cap and market_cap >= 5000000 and volume >= 1000000:
                # –†–∞—Å—á—ë—Ç —Ü–µ–ª–µ–π (TP1‚ÄìTP4) –æ—Ç —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã
                tp1 = round(price * 1.272, 4)
                tp2 = round(price * 1.618, 4)
                tp3 = round(price * 2.0, 4)
                tp4 = round(price * 2.618, 4)

                msg = f"""
üö® <b>High Potential MEM-GEM</b> üö®
<b>{name} ({symbol})</b>

üìâ Price: ${price}
üîª Down from ATH: {round(ath_change, 2)}%
üí∞ Volume: ${volume:,}
üè¶ Market Cap: ${market_cap:,}

üéØ Targets:
TP1: ${tp1}
TP2: ${tp2}
TP3: ${tp3}
TP4: ${tp4}

#memgem #crypto #potential
"""
                bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode=telegram.ParseMode.HTML)

        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–æ–Ω–µ—Ç—ã:", e)

# === –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ===
def main_loop():
    while True:
        try:
            print("üîÑ –ü–æ–∏—Å–∫ –º–µ–º-–≥–µ–º–æ–≤:", datetime.datetime.now())
            check_mem_gems()
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ:", e)
        time.sleep(180)  # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã

# === –ó–∞–ø—É—Å–∫ ===
keep_alive()
main_loop()
@app.route("/send_test")
def send_test():
    bot.send_message(chat_id=CHAT_ID, text="‚úÖ Test message from mem-gem bot")
    return "Test message sent!"
